name: Build.$(Date:yyyy-MM-dd).$(Rev:r)

trigger:
  batch: true
  branches:
    include:
      - master

pr: none

variables:
  - template: variables.yml

stages:
  - stage: Build
    jobs:
      - job: WindowsBuild
        displayName: Windows Build
        strategy:
          matrix:
            X64Debug:
              BuildConfiguration: Debug
              BuildPlatform: x64
            X64Release:
              BuildConfiguration: Release
              BuildPlatform: x64
            X86Debug:
              BuildConfiguration: Debug
              BuildPlatform: x86
            X86Release:
              BuildConfiguration: Release
              BuildPlatform: x86
        pool:
          vmImage: 'windows-2019'
        timeoutInMinutes: 30
        cancelTimeoutInMinutes: 2
        steps:
          - checkout: self
            clean: false
            submodules: false

          - template: templates/windows-build.yml

          - template: templates/windows-publish-build-artifact.yml

  - stage: Release
    jobs:
      - job: Release
        dependsOn: WindowsBuild
        condition: succeeded()
        pool:
          vmImage: 'windows-2019'
        timeoutInMinutes: 0
        steps:
          - checkout: self
            clean: false
            submodules: false

          ##
          ##  Bump our version, create a GitHub release, and consolidate change notes into the log
          ##
          - script: yarn install --frozen-lockfile
            displayName: Install yarn packages

          - script: yarn run beachball publish --no-publish --message "Beachball Publish (no NPM) ***NO_CI***" --yes
            displayName: Beachball publish (no NPM)

          - script: node -p "'##vso[task.setvariable variable=PackageVersion]'+require('./package.json').version"
            displayName: Read package.json version
            workingDirectory: $(Build.SourcesDirectory)

          ##
          ##  Assemble the Windows NuGet package from build artifacts
          ##
          - template: templates/download-and-stage-artifact.yml
            parameters:
              Artifact: Windows-Debug-x86

          - template: templates/download-and-stage-artifact.yml
            parameters:
              Artifact: Windows-Release-x86

          - template: templates/download-and-stage-artifact.yml
            parameters:
              Artifact: Windows-Debug-x64

          - template: templates/download-and-stage-artifact.yml
            parameters:
              Artifact: Windows-Release-x64

          - task: CopyFiles@2
            displayName: Stage headers, nuspec
            inputs:
              targetFolder: $(Build.ArtifactStagingDirectory)
              contents: |
                Continuity.nuspec
                include/**

          - task: NuGetToolInstaller@1

          - script: nuget pack Continuity.nuspec -Properties "commit=$(Build.SourceVersion);id=$(NugetArtifactId);version=$(PackageVersion)" -Verbosity detailed -NonInteractive
            displayName: Create NuGet package
            workingDirectory: $(Build.ArtifactStagingDirectory)

          ##
          ##  Publish the Windows NuGet package to the react-native feed
          ##
          - task: NuGetAuthenticate@0
            displayName: 'NuGet authentication'

          - task: NuGetCommand@2
            displayName: 'Publish NuGet package'
            inputs:
              command: push
              packagesToPush: '$(Build.ArtifactStagingDirectory)\*.nupkg'
              publishVstsFeed: 'b9acb0c2-0443-4db3-8809-50f5d72408f9' # react-native feed
